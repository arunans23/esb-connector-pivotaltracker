<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<proxy xmlns="http://ws.apache.org/ns/synapse" name="pivotaltracker" transports="https,http" statistics="disable"
   trace="disable" startOnLoad="true">
   <target>
      <inSequence>
         <property name="apiUrl" expression="json-eval($.apiUrl)" />
         <property name="userName" expression="json-eval($.userName)" />
         <property name="password" expression="json-eval($.password)" />
         <property name="name" expression="json-eval($.name)" />
         <property name="weekStartDay" expression="json-eval($.weekStartDay)" />
         <property name="projectType" expression="json-eval($.projectType)" />
         <property name="description" expression="json-eval($.description)" />
         <property name="timeZoneOlsonName" expression="json-eval($.timeZoneOlsonName)" />
         <property name="profileContent" expression="json-eval($.profileContent)" />
         <property name="accountIds" expression="json-eval($.accountIds)" />
         <property name="newAccountName" expression="json-eval($.newAccountName)" />
         <property name="projectId" expression="json-eval($.projectId)" />
         <property name="labelId" expression="json-eval($.labelId)" />
         <property name="storyId" expression="json-eval($.storyId)" />
         <property name="apiUrl" expression="json-eval($.apiUrl)" />
         <property name="userName" expression="json-eval($.userName)" />
         <property name="password" expression="json-eval($.password)" />
         <property name="name" expression="json-eval($.name)" />
         <property name="storyId" expression="json-eval($.storyId)" />
         <property name="projectId" expression="json-eval($.projectId)" />
         <property name="limit" expression="json-eval($.limit)" />
         <property name="createdAfter" expression="json-eval($.createdAfter)" />
         <property name="withState" expression="json-eval($.withState)" />
         <property name="offset" expression="json-eval($.offset)" />
         <property name="createdBefore" expression="json-eval($.createdBefore)" />
         <property name="storyType" expression="json-eval($.storyType)" />
         <property name="currentState" expression="json-eval($.currentState)" />
         <property name="acceptedAt" expression="json-eval($.acceptedAt)" />
         <property name="deadline" expression="json-eval($.deadline)" />
         

         <property name="urn.action.header" expression="get-property('transport','Action')" />

         <pivotaltracker.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <userName>{$ctx:userName}</userName>
            <password>{$ctx:password}</password>
         </pivotaltracker.init>
         <header name="Action" expression="get-property('urn.action.header')" scope="transport" />
         <switch source="get-property('transport','Action')">
            <case regex="urn:createProject">
               <pivotaltracker.createProject>
                  <name>{$ctx:name}</name>
                  <weekStartDay>{$ctx:weekStartDay}</weekStartDay>
                  <timeZoneOlsonName>{$ctx:timeZoneOlsonName}</timeZoneOlsonName>
                  <description>{$ctx:description}</description>
                  <profileContent>{$ctx:profileContent}</profileContent>
                  <projectType>{$ctx:projectType}</projectType>
                  <newAccountName>{$ctx:newAccountName}</newAccountName>
               </pivotaltracker.createProject>
            </case>
            <case regex="urn:listProjects">
               <pivotaltracker.listProjects>
                  <accountIds>{$ctx:accountIds}</accountIds>
               </pivotaltracker.listProjects>
            </case>
            <case regex="urn:getProject">
               <pivotaltracker.getProject>
                  <projectId>{$ctx:projectId}</projectId>
               </pivotaltracker.getProject>
            </case>
            <case regex="urn:createLabelForProject">
               <pivotaltracker.createLabelForProject>
                  <projectId>{$ctx:projectId}</projectId>
                  <name>{$ctx:name}</name>
               </pivotaltracker.createLabelForProject>
            </case>
            <case regex="urn:updateProjectLabel">
               <pivotaltracker.updateProjectLabel>
                  <projectId>{$ctx:projectId}</projectId>
                  <labelId>{$ctx:labelId}</labelId>
                  <name>{$ctx:name}</name>
               </pivotaltracker.updateProjectLabel>
            </case>
            <case regex="urn:getProjectLabels">
               <pivotaltracker.getProjectLabels>
                  <projectId>{$ctx:projectId}</projectId>
               </pivotaltracker.getProjectLabels>
            </case>
            <case regex="urn:createLabelForStory">
               <pivotaltracker.createLabelForStory>
                  <projectId>{$ctx:projectId}</projectId>
                  <storyId>{$ctx:storyId}</storyId>
                  <name>{$ctx:name}</name>
                  <labelId>{$ctx:labelId}</labelId>
               </pivotaltracker.createLabelForStory>
            </case>
            <case regex="urn:getStory">
               <pivotaltracker.getStory>
                  <storyId>{$ctx:storyId}</storyId>
                  <projectId>{$ctx:projectId}</projectId>
               </pivotaltracker.getStory>
            </case>
            <case regex="urn:listStories">
               <pivotaltracker.listStories>
                  <limit>{$ctx:limit}</limit>
                  <createdAfter>{$ctx:createdAfter}</createdAfter>
                  <projectId>{$ctx:projectId}</projectId>
                  <withState>{$ctx:withState}</withState>
                  <offset>{$ctx:offset}</offset>
                  <createdBefore>{$ctx:createdBefore}</createdBefore>
               </pivotaltracker.listStories>
            </case>
            <case regex="urn:createStory">
               <pivotaltracker.createStory>
                  <projectId>{$ctx:projectId}</projectId>
                  <name>{$ctx:name}</name>
                  <description>{$ctx:description}</description>
                  <storyType>{$ctx:storyType}</storyType>
                  <currentState>{$ctx:currentState}</currentState>
                  <acceptedAt>{$ctx:acceptedAt}</acceptedAt>
                  <deadline>{$ctx:deadline}</deadline>
               </pivotaltracker.createStory>
            </case>
         </switch>
         <respond />
      </inSequence>
      <outSequence>
         <log />
         <send />
      </outSequence>
   </target>
   <description />
</proxy>
                                