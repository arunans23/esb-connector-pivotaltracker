<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<!-- Method Documentation URL: https://www.pivotaltracker.com/help/api/rest/v5#Stories -->
<template name="listStories" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="projectId" description="The unique identifier for a project."/>
    <parameter name="withLabel" description="The label name which all returned stories must match."/>
    <parameter name="withState"
               description="The story's current_state which all returned stories must match.Valid enumeration values: accepted, delivered, finished, started, rejected, planned, unstarted, unscheduled."/>
    <parameter name="afterStoryId" description="Filters results to stories that are after the given story id."/>
    <parameter name="beforeStoryId" description="Filters results to stories that are before the given story id."/>
    <parameter name="acceptedBefore"
               description="The  date and time (ISO 8601 format or milliseconds) which all returned stories are accepted before."/>
    <parameter name="acceptedAfter"
               description="The date and time (ISO 8601 format or milliseconds) which all returned stories are accepted after."/>
    <parameter name="createdBefore"
               description="The date and time (ISO 8601 format or milliseconds) which all returned stories are created before."/>
    <parameter name="createdAfter"
               description="The date and time (ISO 8601 format or milliseconds) which all returned stories are created after."/>
    <parameter name="updatedBefore"
               description="The date and time (ISO 8601 format or milliseconds) which all returned stories are updated before."/>
    <parameter name="updatedAfter"
               description="The date and time (ISO 8601 format or milliseconds) which all returned stories are updated after."/>
    <parameter name="deadlineBefore"
               description="The date and time (ISO 8601 format or milliseconds) that release dates fall before."/>
    <parameter name="deadlineAfter"
               description="The date and time (ISO 8601 format or milliseconds) that release dates fall after."/>
    <parameter name="limit" description="The number of stories to return."/>
    <parameter name="offset"
               description=" With the first story in the priority list as 0, the index of the first story to return."/>
    <parameter name="filter"
               description="Only the stories that match the search criteria are returned. Cannot be used together with any other parameters."/>
    <sequence>
        <property name="uri.var.projectId" expression="$func:projectId"/>
        <property name="uri.var.withLabel" expression="$func:withLabel"/>
        <property name="uri.var.withState" expression="$func:withState"/>
        <property name="uri.var.afterStoryId" expression="$func:afterStoryId"/>
        <property name="uri.var.beforeStoryId" expression="$func:beforeStoryId"/>
        <property name="uri.var.acceptedBefore" expression="$func:acceptedBefore"/>
        <property name="uri.var.acceptedAfter" expression="$func:acceptedAfter"/>
        <property name="uri.var.createdBefore" expression="$func:createdBefore"/>
        <property name="uri.var.createdAfter" expression="$func:createdAfter"/>
        <property name="uri.var.updatedBefore" expression="$func:updatedBefore"/>
        <property name="uri.var.updatedAfter" expression="$func:updatedAfter"/>
        <property name="uri.var.deadlineBefore" expression="$func:deadlineBefore"/>
        <property name="uri.var.deadlineAfter" expression="$func:deadlineAfter"/>
        <property name="uri.var.limit" expression="$func:limit"/>
        <property name="uri.var.offset" expression="$func:offset"/>
        <property name="uri.var.filter" expression="$func:filter"/>
        <script language="js">
        <![CDATA[
         var urlQuery = '';                      
         var withLabel = mc.getProperty('uri.var.withLabel');
         var withState = mc.getProperty('uri.var.withState');
         var afterStoryId = mc.getProperty('uri.var.afterStoryId');
         var beforeStoryId = mc.getProperty('uri.var.beforeStoryId');
         var acceptedBefore = mc.getProperty('uri.var.acceptedBefore');
         var acceptedAfter = mc.getProperty('uri.var.acceptedAfter');
         var createdBefore = mc.getProperty('uri.var.createdBefore');
         var createdAfter = mc.getProperty('uri.var.createdAfter');
         var updatedBefore = mc.getProperty('uri.var.updatedBefore');
         var updatedAfter = mc.getProperty('uri.var.updatedAfter');
         var deadlineBefore = mc.getProperty('uri.var.deadlineBefore');
         var deadlineAfter = mc.getProperty('uri.var.deadlineAfter');
         var limit = mc.getProperty('uri.var.limit');
         var offset = mc.getProperty('uri.var.offset');
         var filter = mc.getProperty('uri.var.filter');
         
         if (withLabel != null && withLabel != "") {
            urlQuery = 'with_label=' + withLabel + '&';
         }
         if (withState != null && withState != '') {
            urlQuery += 'with_state=' + withState + '&';
         }
         if (afterStoryId != null && afterStoryId != '') {
            urlQuery += 'after_story_id=' + afterStoryId + '&';
         }
         if (beforeStoryId != null && beforeStoryId != '') {
            urlQuery += 'before_story_id=' + beforeStoryId + '&';
         }
         if (acceptedBefore != null && acceptedBefore != '') {
            urlQuery += 'accepted_before=' + acceptedBefore + '&';
         }
         if (acceptedAfter != null && acceptedAfter != '') {
            urlQuery += 'accepted_after=' + acceptedAfter + '&';
         }
         if (createdBefore != null && createdBefore != '') {
            urlQuery += 'created_before=' + createdBefore + '&';
         }
         if (createdAfter != null && createdAfter != '') {
            urlQuery += 'created_after=' + createdAfter + '&';
         }
         if (updatedBefore != null && updatedBefore != '') {
            urlQuery += 'updated_before=' + updatedBefore + '&';
         }
         if (updatedAfter != null && updatedAfter != '') {
            urlQuery += 'updated_after=' + updatedAfter + '&';
         }
         if (deadlineBefore != null && deadlineBefore != '') {
            urlQuery += 'deadline_before=' + deadlineBefore + '&';
         }
         if (deadlineAfter != null && deadlineAfter != '') {
            urlQuery += 'deadline_after=' + deadlineAfter + '&';
         }
         if (limit != null && limit != '') {
            urlQuery += 'limit=' + limit + '&';
         }
         if (offset != null && offset != '') {
            urlQuery += 'offset=' + offset + '&';
         }
         if (filter != null && filter != '') {
            urlQuery += 'filter=' + filter + '&';
         } 
         if (urlQuery != '') {
            mc.setProperty("uri.var.urlQuery", '?' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&")));
         }         
        ]]>
        </script>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="{+uri.var.apiUrl}/projects/{uri.var.projectId}/stories{+uri.var.urlQuery}"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="X-UA-Compatible" action="remove" scope="transport"/>
        <header name="Cache-Control" action="remove" scope="transport"/>
        <header name="X-Request-Id" action="remove" scope="transport"/>
        <header name="X-Runtime" action="remove" scope="transport"/>
        <header name="ETag" action="remove" scope="transport"/>
        <header name="X-Rack-Cache" action="remove" scope="transport"/>
        <header name="X-Powered-By" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Origin" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Credentials" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Methods" action="remove" scope="transport"/>
        <header name="Access-Control-Allow-Headers" action="remove" scope="transport"/>
        <header name="X-Tracker-Client-Pinger-Interval" action="remove" scope="transport"/>
        <header name="X-Tracker-Project-Version" action="remove" scope="transport"/>
    </sequence>
</template>